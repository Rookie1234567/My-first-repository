1. touch name.txt                create a .txt file named as name
2. vi name.txt                   open this file and can write something
3. To quit, you need to enter shift and : togerther and enter wq
4. git add name.txt              add this file to the stage. Use it after each change otherwise nothing will be recorded.
5. git commit -m "xxx"           xxx is to explain the description and add the file from stage to branch.
6. mkdir \xx\xx\xx               create a fold
7. pwd                           show the directory
8. git init                      make this fold as the Git repository
9. git status                    show the status of the work directory, it will tell you something has been changed
10. git diff name.txt            to check the difference.
11. git log                      To check the log that you send to the Git. Enter q to quit.
12. git log --pretty=oneline     To simplify the log
13. git reset --hard HEAD^       HEAD means the newest version. ^ means the last.
14. git reset --hard commitID    Go back to the version with commitID
15. git reflog                   show all the commands
16. git diff HEAD -- name.txt    Check the difference between the directory and repository
17. git checkout -- name,txt     Discard the change in directory. Before add and commit
18. git reset HEAD name.txt      Discard file in stage. After add and before commit. Then do the note 17th.
19. git restore -- worktree file Make file back to directory from stage.
20. git restore -- staged file   Make file back to stage from repository.
21. rm file                      Delete file in directory
22. git checkout -- file         Replace the file from directory with the file from repository. 
23. git rm file                  Delete the file in repository. Remember commit.

